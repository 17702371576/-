"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isBlankingPoint = exports.flatten = exports.hexToRgb = void 0;
const RGB_HEX = /^#?(?:([\da-f]{3})[\da-f]?|([\da-f]{6})(?:[\da-f]{2})?)$/i;
function hexToRgb(str) {
    const [, short, long] = String(str).match(RGB_HEX) || ['', '', ''];
    if (long) {
        const value = Number.parseInt(long, 16);
        return [value >> 16, (value >> 8) & 0xff, value & 0xff];
    }
    else if (short) {
        return Array.from(short, (s) => Number.parseInt(s, 16)).map((n) => (n << 4) | n);
    }
}
exports.hexToRgb = hexToRgb;
function flatten(arr, result = []) {
    for (let i = 0, length = arr.length; i < length; i++) {
        const value = arr[i];
        if (Array.isArray(value)) {
            flatten(value, result);
        }
        else {
            result.push(value);
        }
    }
    return result;
}
exports.flatten = flatten;
function isBlankingPoint(point) {
    return !point.r && !point.g && !point.b;
}
exports.isBlankingPoint = isBlankingPoint;
