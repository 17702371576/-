"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CubicCurve = void 0;
const Shape_1 = require("./Shape");
const Point_1 = require("./Point");
const Bezier = require("bezier-js");
class CubicCurve extends Shape_1.Shape {
    constructor(options) {
        super();
        this.from = options.from;
        this.to = options.to;
        this.color = options.color;
    }
    draw(resolution) {
        const curve = new Bezier(this.from.x, this.from.y, this.from.control.x, this.from.control.y, this.to.control.x, this.to.control.y, this.to.x, this.to.y);
        const distance = curve.length();
        const steps = Math.round(distance * resolution);
        // When there are less than two steps, we can skip making a curve altogether.
        if (steps < 2) {
            return [new Point_1.Point(this.to.x, this.to.y, this.color)];
        }
        const curvePoints = curve.getLUT(steps);
        // Remove the first point if there is one.
        if (curvePoints.length > 1)
            curvePoints.shift();
        return curvePoints.map((point) => new Point_1.Point(point.x, point.y, this.color));
    }
}
exports.CubicCurve = CubicCurve;
