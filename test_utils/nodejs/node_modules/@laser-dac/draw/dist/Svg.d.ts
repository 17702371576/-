import { Shape } from './Shape';
import { Node } from 'svg-parser';
import { Color, Point } from './Point';
interface SvgOptions {
    x: number;
    y: number;
    file: Node;
    color?: Color;
    size?: number;
    waitAmount?: number;
    blankingAmount?: number;
}
export declare class Svg extends Shape {
    x: number;
    y: number;
    size: number;
    file: Node;
    color: Color;
    waitAmount: number;
    blankingAmount: number;
    private pathNodes;
    constructor(options: SvgOptions);
    parseViewBox(raw: string): {
        minX: number;
        minY: number;
        width: number;
        height: number;
    };
    parseHexToRelativeColor(color: string): Color;
    nodeWalker: (child: Node) => void;
    draw(resolution: number): Point[];
}
export declare function loadSvgFile(path: string): Node;
export {};
